procedure main()
    // Inicializar los semáforos
    create_semaphore(sem_obra_gris, 1)
    create_semaphore(sem_plomeria_ext, 0)
    create_semaphore(sem_techo, 0)
    create_semaphore(sem_pintura_ext, 0)
    create_semaphore(sem_acabados_ext, 0)
    create_semaphore(sem_instalacion_electrica, 0)
    create_semaphore(sem_plomeria_int, 0)
    create_semaphore(sem_pintura_int, 0)
    create_semaphore(sem_piso, 0)
    create_semaphore(sem_acabados_int, 0)
    create_mutex(mutex)

    // Crear lista de tareas
    tareas := [
        {"Obra gris", sem_obra_gris, [], 0, 2},
        {"Plomería exterior", sem_plomeria_ext, [sem_obra_gris], 1, 2},
        {"Techo", sem_techo, [sem_obra_gris], 1, 1},
        {"Pintura exterior", sem_pintura_ext, [sem_plomeria_ext], 1, 1},
        {"Acabados exteriores", sem_acabados_ext, [sem_pintura_ext], 1, 0},
        {"Instalación eléctrica", sem_instalacion_electrica, [sem_techo], 1, 1},
        {"Plomería interior", sem_plomeria_int, [sem_plomeria_ext], 1, 1},
        {"Pintura interior", sem_pintura_int, [sem_plomeria_int, sem_instalacion_electrica], 2, 1},
        {"Piso", sem_piso, [sem_pintura_int], 1, 1},
        {"Acabados interiores", sem_acabados_int, [sem_piso], 1, 0}
    ]

    // Crear hilos para cada tarea
    for i := 0 to length(tareas) - 1 do
        create_thread(ejecutar_tarea, tareas[i])
    end for

    // Esperar a que todos los hilos terminen
    for i := 0 to length(tareas) - 1 do
        join_thread(tareas[i].hilo)
    end for

    // Destruir semáforos y mutex
    destroy_semaphore(sem_obra_gris)
    destroy_semaphore(sem_plomeria_ext)
    destroy_semaphore(sem_techo)
    destroy_semaphore(sem_pintura_ext)
    destroy_semaphore(sem_acabados_ext)
    destroy_semaphore(sem_instalacion_electrica)
    destroy_semaphore(sem_plomeria_int)
    destroy_semaphore(sem_pintura_int)
    destroy_semaphore(sem_piso)
    destroy_semaphore(sem_acabados_int)
    destroy_mutex(mutex)

    print "Trabajo completo :D"
end procedure

procedure ejecutar_tarea(tarea)
    // Esperar a que todas las dependencias se completen
    for i := 0 to tarea.num_dependencias - 1 do
        wait_semaphore(tarea.dependencias[i])
    end for

    // Iniciar la tarea con acceso exclusivo a la salida estándar
    lock(mutex)
    print tarea.nombre, "ha comenzado."
    sleep(1)  // Simular trabajo
    print tarea.nombre, "ha terminado."
    unlock(mutex)

    // Desbloquear las tareas dependientes
    for i := 0 to tarea.num_post - 1 do
        post_semaphore(tarea.mi_semaforo)
    end for

    return NULL
end procedure